Singleton/Prototyp zustands-los oder -behaftet

- Die Komponenten bei Spring Boot sind sogenannte Singletons. Singletons sind Objekte, die nur ein einziges Mal im
Framework existieren.
- Ein Prototyp wird erst dann erzeugt, wenn er gebraucht wird. Wenn eine neue Anfrage erteilt wird, dann wird auch ein
neuer Prototyp aufgebaut.

Beispiel: mehrere Benutzer auf einem Webserver brauchen einen eigenen Warenkorb.
- Dafür muss ich jedem einzelnen Benutzer einen eigenen Warenkorb zuordnen. Somit gibt es mehrere gleiche Objekte
-> Prototyp.

- Am besten sind Singletons immer immutable (Zustand nicht veränderbar).
    - Immutable Klassen sind immer Thread-sicher.
    - Wenn es mutable Zustände gibt, muss auf jeden Fall auf Thread-Sicherheit geachtet werden.
    -> Es könnte passieren, dass mehrere Threads auf einen Singleton zugreifen und dann muss man aufpassen, dass diese
    Komponente sich nicht irgendwelche internen Zustände merkt, die dann von einem anderen Thread direkt überschrieben
    werden. Daher ist allgemein von veränderbaren Zuständen bei Singletons abzuraten.

- Ein Prototyp kann zustandsbehaftet (mutable) sein, da das Objekt nicht geteilt wird.
    - Der Status ist individuell für jeden Client.
    - Mögliches Problem: Wenn es gemeinsame Zustände über statische Variablen gibt. Das ist ein spezieller seltener Fall.

